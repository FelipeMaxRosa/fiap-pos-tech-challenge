apiVersion: apps/v1
kind: Deployment
metadata:
  name: fast-n-foodious
  labels:
    app: fast-n-foodious
spec:
  # replicas: 1
  selector:
    matchLabels:
      app: fast-n-foodious
  template:
    metadata:
      labels:
        app: fast-n-foodious
    spec:
      containers:
        - name: fast-n-foodious
          image: renators/fast-n-foodious:291
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: fast-n-foodious-env
          env:
            - name: SENHA
              valueFrom:
                secretKeyRef:
                  name: "new-secret"
                  key: "chave"
            - name: MYSQL_HOST
              value: "localhost"
            - name: NODE_ENV
              value: local-mock-repository
          volumeMounts:
            - name: temp-dir
              mountPath: /tmp-example
      volumes:
        - name: temp-dir
          persistentVolumeClaim:
            claimName: mypvc
        #   hostPath:
        #     path: "/Users/renatorodrigues/Estudos/PosTech - SOAT/FASE 1 - WELCOME TO SOFTWARE ARCHITECTURE/Tech Challenge/fast-n-foodious/tmp-2"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mypv
spec:
  capacity:
    storage: 10Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: slow
  hostPath:
    path: "/Users/renatorodrigues/Estudos/PosTech - SOAT/FASE 1 - WELCOME TO SOFTWARE ARCHITECTURE/Tech Challenge/fast-n-foodious/tmp-example"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mypvc
spec:
  resources:
    requests:
      storage: 5Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: slow

            

  #   - name: mysql
  #     image: mysql:8.0
  #     resources:
  #       limits:
  #         memory: "512Mi"
  #         cpu: "500m"
  #     ports:
  #       - containerPort: 3306
  #     envFrom:
  #     - configMapRef:
  #         name: fast-n-foodious-env
  #     volumeMounts:
  #       - name: mysql-data
  #         mountPath: /var/lib/mysql
  # volumes:
  #   - name: mysql-data
  #     emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: fast-n-foodious-srv
spec:
  type: NodePort
  selector:
    app: fast-n-foodious
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30088
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fast-n-foodious-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fast-n-foodious
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50


# kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
# kubectl patch deployment metrics-server -n kube-system --type 'json' -p '[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--kubelet-insecure-tls"}]'