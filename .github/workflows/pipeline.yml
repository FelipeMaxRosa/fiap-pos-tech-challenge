name: CI
run-name: Fast N Foodious CI
on: [push]
jobs:
  production-check:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_HOST: '%'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3

      - name: Installing dependencies
        run: npm install
      - name: Building application
        run: npm rum build
      - name: Running unit tests
        run: npm run test
      - name: Running coverage tests
        run: npm run test:cov
      - name: Running check components without unit/e2e tests
        run: npm run test:check
      - name: Running e2e tests in memory repositories
        run: NODE_ENV=local-mock-repository npm run test:e2e
      - name: Running e2e in mysql server - Build Docker Images for Tests
        run: docker-compose --env-file ./envs/prod.env build
      - name: Running e2e in mysql server - Start Docker Containers
        run: docker-compose --env-file ./envs/prod.env up -d
      - name: Running e2e in mysql server - Wait for MySQL to Accept Connections
        run: docker-compose exec -T mysql sh -c 'while ! mysqladmin ping -hlocalhost --silent; do sleep 1; done'
      # - name: Running e2e in mysql server - Running Tests
      #   run: docker-compose --env-file ./envs/prod.env exec -T fast-n-foodious sh -c "npm run test:e2e"
      - name: Deploying application
        run: echo "The application has been deployed successfully."
        
  release-check:
    if: ${{ github.ref == 'refs/heads/release' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
      - name: Installing dependencies
        run: npm install
      - name: Building application
        run: npm rum build
      - name: Running unit tests
        run: npm run test
      - name: Running coverage tests
        run: npm run test:cov
      - name: Running check components without unit/e2e tests
        run: npm run test:check
      - name: Running e2e tests (In-Memory Repositories)
        run: NODE_ENV=local-mock-repository npm run test:e2e
      - name: Releasing application
        run: echo "The application has been released successfully."
